/*
 * GUI
 */
package foodrecommend;

public class FoodGui extends javax.swing.JFrame {
    double price = -1;
    String spice = "n";
    String hot = "n";
    int calorie = -1;
    String [] restrictions;
    
    boolean bread = false;
    boolean salad = false;
    boolean soup = false;
    boolean meat = false;
    boolean seafood = false;
    boolean noodles = false;
    boolean beverage = false;
    boolean fruit = false;
    boolean dessertother = false;
    
    boolean wantAppetizer = false;
    boolean wantEntree = false;
    boolean wantDessert = false;
    /**
     * Creates new form FoodGui
     */
    boolean typeReady = false;
    boolean preferencesReady = false;
    
    public FoodGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        ButtonPreference = new javax.swing.JButton();
        c = new javax.swing.JTextField();
        r = new javax.swing.JTextField();
        p = new javax.swing.JTextField();
        AButton = new javax.swing.JButton();
        EButton = new javax.swing.JButton();
        DButton = new javax.swing.JButton();
        AppetizerType = new javax.swing.JTextField();
        EntreeType = new javax.swing.JTextField();
        DessertType = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        IncorrectInput = new javax.swing.JTextArea();
        readyButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        FinalOutput = new javax.swing.JTextArea();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        currentType = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ResetType = new javax.swing.JButton();
        ResetP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ButtonPreference.setText("Enter Preferences");
        ButtonPreference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPreferenceActionPerformed(evt);
            }
        });

        c.setText("Calories");
        c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cActionPerformed(evt);
            }
        });

        r.setText("Restrictions");
        r.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rActionPerformed(evt);
            }
        });

        p.setText("Price");
        p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pActionPerformed(evt);
            }
        });

        AButton.setText("Appetizer");
        AButton.setToolTipText("");
        AButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AButtonActionPerformed(evt);
            }
        });

        EButton.setText("Entree");
        EButton.setToolTipText("");
        EButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EButtonActionPerformed(evt);
            }
        });

        DButton.setText("Dessert");
        DButton.setToolTipText("");
        DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DButtonActionPerformed(evt);
            }
        });

        AppetizerType.setText("Appetizer Type");
        AppetizerType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppetizerTypeActionPerformed(evt);
            }
        });

        EntreeType.setText("Entree Type");
        EntreeType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntreeTypeActionPerformed(evt);
            }
        });

        DessertType.setText("Dessert Type");
        DessertType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DessertTypeActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("4. Decide what type of meal you would like (Appetizers/Entree/Desserts).\n\n5. Enter the type of food that you would like and click on the meal type button.\n\tFor appetizers, the food types are bread / salad / soup.\n\tFor entree, the food types are meat / seafood / noodles.\n\tFor dessert, ythe food types are beverages / fruits / other.");
        jScrollPane1.setViewportView(jTextArea1);

        IncorrectInput.setEditable(false);
        IncorrectInput.setColumns(20);
        IncorrectInput.setRows(5);
        jScrollPane3.setViewportView(IncorrectInput);

        readyButton.setText("Click here if you are ready to go.");
        readyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyButtonActionPerformed(evt);
            }
        });

        FinalOutput.setEditable(false);
        FinalOutput.setColumns(20);
        FinalOutput.setRows(5);
        jScrollPane4.setViewportView(FinalOutput);

        jRadioButton1.setText("Spicy");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Hot");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("1. If you would like spicy food, press the spicy button.\n\n2. If you would like hot food, press the hot button.\n\n3.To enter your preferences, please enter the calorie and price that you\nwould prefer.\n       To enter calorie, please enter an integer in this format: (Eg:1400)\n       To enter price, please enter a number in this format: (Eg: 10.00)\n       To enter restrictions, please type in Meat/Gluten/Peanuts/None. If \n        you have multiple restricions, please seperate them with a \n        semicolon (e.g. meat;gluten)");
        jScrollPane6.setViewportView(jTextArea2);

        currentType.setText("Current type: None");
        currentType.setToolTipText("");
        currentType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentTypeActionPerformed(evt);
            }
        });

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("PLEASE FOLLOW THE INSTRUCTIONS BELOW!\n\nInputs of incorrect format will not be accepted.\n");
        jScrollPane2.setViewportView(jTextArea3);

        jLabel3.setText("Input Status:");

        jLabel4.setText("Meal Type:");

        jLabel5.setText("Food Type:");

        jLabel6.setText("OUTPUT:");

        ResetType.setText("Reset Type");
        ResetType.setToolTipText("");
        ResetType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetTypeActionPerformed(evt);
            }
        });

        ResetP.setText("Reset Calories, Price and Restricions");
        ResetP.setToolTipText("");
        ResetP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetPActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(35, 35, 35)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 582, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(jLabel4)
                                .add(31, 31, 31)
                                .add(AButton)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(EButton)
                                .add(6, 6, 6)
                                .add(DButton)
                                .add(18, 18, 18)
                                .add(ResetType))
                            .add(layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(AppetizerType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(8, 8, 8)
                                .add(EntreeType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(DessertType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(currentType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 177, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 582, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 490, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(jRadioButton1)
                                .add(18, 18, 18)
                                .add(jRadioButton2)
                                .add(25, 25, 25)
                                .add(c, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 33, Short.MAX_VALUE)
                                .add(p, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(r, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(ButtonPreference))
                            .add(layout.createSequentialGroup()
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jScrollPane3)))
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 582, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(readyButton)
                        .add(181, 181, 181))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(ResetP)
                        .add(136, 136, 136))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 184, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jRadioButton1)
                    .add(jRadioButton2)
                    .add(c, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(p, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(r, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ButtonPreference))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ResetP)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(AButton)
                    .add(EButton)
                    .add(DButton)
                    .add(jLabel4)
                    .add(ResetType))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(DessertType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(EntreeType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(AppetizerType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(currentType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(18, 18, 18)
                .add(readyButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .add(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonPreferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPreferenceActionPerformed

        String currentInput;
        
        //Make a method that check the format here.
        //Reset the text if format is incorrect: p.setText("Price");
        price = Double.parseDouble(p.getText());
        
        //Make a method that check the format here.
        //Reset the text if format is incorrect: c.setText("Calorie");
        calorie = Integer.parseInt(c.getText());
        
        currentInput = r.getText();

        while(!currentInput.equalsIgnoreCase("Meat")&& !currentInput.equalsIgnoreCase("Peanut")&&!currentInput.equalsIgnoreCase("Gluten") 
                &&!currentInput.equalsIgnoreCase("None")&&!
                currentInput.equalsIgnoreCase("Meat;Peanut")&&!currentInput.equalsIgnoreCase("Meat;Gluten")
                &&!currentInput.equalsIgnoreCase("Peanut;Gluten")&&!currentInput.equalsIgnoreCase("Peanut;Meat")&&!
                currentInput.equalsIgnoreCase("Gluten;Meat")&&!currentInput.equalsIgnoreCase("Gluten;Peanut")&&!
                currentInput.equalsIgnoreCase("Meat;Peanut;Gluten")&&!currentInput.equalsIgnoreCase("Meat;Gluten;Peanut")
                &&!currentInput.equalsIgnoreCase("Gluten;Peanut;Meat")&&!currentInput.equalsIgnoreCase("Gluten;Meat;Peanut")
                &&!currentInput.equalsIgnoreCase("Peanut;Meat;Gluten")&&!currentInput.equalsIgnoreCase("Peanut;Gluten;Meat"))
        {
            IncorrectInput.setText("Incorrect format. Please retype your restrictions(meat/peanut/gluten/none)");
            currentInput = r.getText();
        } 
        
        String [] threeRestriction = new String[3];
        String [] twoRestriction = new String[2];
        String [] oneRestriciton = new String[1];
        
        if(currentInput.length()>8){
            threeRestriction[0]=currentInput.substring(0,currentInput.indexOf(",")-1);
            threeRestriction[1]=currentInput.substring(currentInput.indexOf(",")+1,currentInput.indexOf(",",currentInput.indexOf(",")));
            threeRestriction[2]=currentInput.substring(currentInput.indexOf(",",currentInput.indexOf(",")),currentInput.length()-1);
            restrictions = threeRestriction;
        }
        else if(currentInput.length()>6){
            twoRestriction[0]=currentInput.substring(0,currentInput.indexOf(",")-1);
            twoRestriction[1] = currentInput.substring(currentInput.indexOf(",")-1);
            restrictions = threeRestriction;
        }
        else{
            oneRestriciton[0] = currentInput;
            restrictions = oneRestriciton;
        }
        preferencesReady = true;
        IncorrectInput.setText("Successful input");
        
    }//GEN-LAST:event_ButtonPreferenceActionPerformed

    private void EButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EButtonActionPerformed
        String currentInput;
        if(typeReady == true && wantEntree == false){
            IncorrectInput.setText("Incorrect format. You have already selected a type of food.\n"
                    + "Please reset the food types before entering.");
        }
        else{
            wantEntree = true;
            currentType.setText("Current type: Entree");

            currentInput = EntreeType.getText();
            if((currentInput.equalsIgnoreCase("meat")||currentInput.equalsIgnoreCase("seafood")||
                    currentInput.equalsIgnoreCase("noudles"))!= true){
                IncorrectInput.setText("Incorrect format. Please retype:"
                        + "meat/seafood/noodles");
            }
            else{
                typeReady = true;
                IncorrectInput.setText("Successful input ("+currentInput+")");
                if(currentInput.equalsIgnoreCase("meat")){
                    meat = true;
                }
                else if(currentInput.equals("seafood")){
                    seafood = true;
                }
                else{
                    noodles = true;
                }
            } 
        }
    }//GEN-LAST:event_EButtonActionPerformed

    private void AButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AButtonActionPerformed
        // TODO add your handling code here:
        String currentInput;
        if(typeReady == true && wantAppetizer == false){
            IncorrectInput.setText("Incorrect format. You have already selected a type of food.\n"
                    + "Please reset the food types before entering.");
        }
        else{
            wantAppetizer = true;
;
            currentType.setText("Current type: Appetizers");

            currentInput = AppetizerType.getText();
            System.out.println(currentInput);
            if((currentInput.equalsIgnoreCase("Salad")||currentInput.equalsIgnoreCase("Bread")||
                    currentInput.equalsIgnoreCase("Soup"))!= true){
                IncorrectInput.setText("Incorrect format. Please retype:"
                        + "salad/bread/soup");
            }
            else{
                    typeReady = true;
                    IncorrectInput.setText("Successful input ("+currentInput+")");
                    if(currentInput.equalsIgnoreCase("salad")){
                        salad = true;
                    }
                    else if(currentInput.equalsIgnoreCase("bread")){
                        bread = true;
                    }
                    else{
                        soup = true;
                } 
            }
        }
    }//GEN-LAST:event_AButtonActionPerformed

    private void DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DButtonActionPerformed
        String currentInput;
        if(typeReady == true && wantDessert == false){
            IncorrectInput.setText("Incorrect format. You have already selected a type of food.\n"
                    + "Please reset the food types before entering.");
        }
        else{
            wantDessert = true;
            
            currentType.setText("Current type: Desserts");

            currentInput = DessertType.getText();
            if((currentInput.equalsIgnoreCase("beverage")||currentInput.equalsIgnoreCase("fruit")||
                    currentInput.equalsIgnoreCase("other"))!= true){
                IncorrectInput.setText("Incorrect format. Please retype: beverage/fruit/other");
            }
            else{
                typeReady = true;
                IncorrectInput.setText("Successful input ("+currentInput+")");
                
                if(currentInput.equalsIgnoreCase("beverage")){
                    beverage = true;
                }
                else if(currentInput.equals("fruit")){
                    fruit = true;
                }
                else{
                    dessertother = true;
                }        // TODO add your handling code here:
                typeReady = true;
            }
        }
    }//GEN-LAST:event_DButtonActionPerformed

    private void readyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyButtonActionPerformed
        if(typeReady == true && preferencesReady == true){
            //Run main program and print to the output box
        }
        else if (typeReady == false && preferencesReady== false){
            IncorrectInput.setText("You have not entered what type of food you want,\n nor your preferences");
        }
        else if (typeReady == false){
            IncorrectInput.setText("You have not entered what type of food you want.");
        }
        else{
            IncorrectInput.setText("You have not entered your preferences.");
        }
        
    }//GEN-LAST:event_readyButtonActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

        if(hot.equals("y")){
            hot = "n";
        }
        else{
            hot = "y";
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if(spice.equals("y")){
            spice = "n";
        }
        else{
            spice = "y";
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cActionPerformed

    private void pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pActionPerformed

    private void rActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rActionPerformed

    private void AppetizerTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppetizerTypeActionPerformed
        // TODO add your handling code here:
        if (wantAppetizer ==  false){
            IncorrectInput.setText("You have not selected appetizers, please select first.");
        }
    }//GEN-LAST:event_AppetizerTypeActionPerformed

    private void EntreeTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntreeTypeActionPerformed
        if (wantEntree ==  false){
            IncorrectInput.setText("You have not selected Entree, please select first.");
        }
    }//GEN-LAST:event_EntreeTypeActionPerformed

    private void DessertTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DessertTypeActionPerformed
        if (wantDessert ==  false){
            IncorrectInput.setText("You have not selected Desserts, please select first.");
        }
    }//GEN-LAST:event_DessertTypeActionPerformed

    private void currentTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentTypeActionPerformed

    private void ResetTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetTypeActionPerformed
        // TODO add your handling code here:
               currentType.setText("Current type: None");
       wantAppetizer = false;
       AppetizerType.setText("Appetizer type");
       wantEntree = false;
       EntreeType.setText("Entree type");
       wantDessert = false;
       DessertType.setText("Dessert type");
       
       typeReady = false;
       
       bread = false;
       salad = false;
       soup = false;
       meat = false;
       seafood = false;
       noodles = false;
       beverage = false;
       fruit = false;
       dessertother = false;
       
       IncorrectInput.setText("");
    }//GEN-LAST:event_ResetTypeActionPerformed

    private void ResetPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetPActionPerformed
        // TODO add your handling code here:
        price = -1;
        calorie = -1;
        String[] a = {"none"};
        restrictions = a;
        preferencesReady = false;
        
        p.setText("Price");
        c.setText("Calorie");
        r.setText("Restrictions");
        IncorrectInput.setText("");
    }//GEN-LAST:event_ResetPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FoodGui().setVisible(true);
            }
        });
    }
    public static boolean ToBoolean(String decision){
        if(decision.equalsIgnoreCase("Y")){
            return true;
        }
        else return false;
    }
    public static boolean CheckInput(String decision){
        if (decision.equalsIgnoreCase("Y")||decision.equalsIgnoreCase("N")){
            return true;
        }
        else return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AButton;
    private javax.swing.JTextField AppetizerType;
    private javax.swing.JButton ButtonPreference;
    private javax.swing.JButton DButton;
    private javax.swing.JTextField DessertType;
    private javax.swing.JButton EButton;
    private javax.swing.JTextField EntreeType;
    private javax.swing.JTextArea FinalOutput;
    private javax.swing.JTextArea IncorrectInput;
    private javax.swing.JButton ResetP;
    private javax.swing.JButton ResetType;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JTextField c;
    private javax.swing.JTextField currentType;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField p;
    private javax.swing.JTextField r;
    private javax.swing.JButton readyButton;
    // End of variables declaration//GEN-END:variables
}
