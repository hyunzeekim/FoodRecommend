/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package foodrecommend;

import static foodrecommend.FoodRecommend.CheckInput;
import java.util.Scanner;
// Change the place for current instructions
// Change functions for wrong input.
/**
 *
 * @author xiaohan
 */
public class FoodGui extends javax.swing.JFrame {
    double price = -1;
    String spice = "n";
    String hot = "n";
    int calorie = -1;
    String [] restrictions;
    
    boolean bread = false;
    boolean salad = false;
    boolean soup = false;
    boolean meat = false;
    boolean seafood = false;
    boolean noodles = false;
    boolean beverage = false;
    boolean fruit = false;
    boolean dessertother = false;
    
    boolean wantAppetizer = false;
    boolean wantEntree = false;
    boolean wantDessert = false;
    /**
     * Creates new form FoodGui
     */
    boolean typeReady = false;
    boolean preferencesReady = false;
    
    public FoodGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        ButtonPreference = new javax.swing.JButton();
        c = new javax.swing.JTextField();
        r = new javax.swing.JTextField();
        p = new javax.swing.JTextField();
        AButton = new javax.swing.JButton();
        EButton = new javax.swing.JButton();
        DButton = new javax.swing.JButton();
        AppetizerType = new javax.swing.JTextField();
        EntreeType = new javax.swing.JTextField();
        DessertType = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        currentInstruction = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        IncorrectInput = new javax.swing.JTextArea();
        currentInstructionLable = new javax.swing.JLabel();
        ResetP = new javax.swing.JButton();
        readyButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        FinalOutput = new javax.swing.JTextArea();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        RestoreType = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        currentType = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ButtonPreference.setText("Enter Preferences");
        ButtonPreference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPreferenceActionPerformed(evt);
            }
        });

        c.setText("Calories");
        c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cActionPerformed(evt);
            }
        });

        r.setText("Restrictions");
        r.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rActionPerformed(evt);
            }
        });

        p.setText("Price");
        p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pActionPerformed(evt);
            }
        });

        AButton.setText("Appetizer");
        AButton.setToolTipText("");
        AButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AButtonActionPerformed(evt);
            }
        });

        EButton.setText("Entree");
        EButton.setToolTipText("");
        EButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EButtonActionPerformed(evt);
            }
        });

        DButton.setText("Dessert");
        DButton.setToolTipText("");
        DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DButtonActionPerformed(evt);
            }
        });

        AppetizerType.setText("Appetizer Type");
        AppetizerType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppetizerTypeActionPerformed(evt);
            }
        });

        EntreeType.setText("Entree Type");
        EntreeType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntreeTypeActionPerformed(evt);
            }
        });

        DessertType.setText("Dessert Type");
        DessertType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DessertTypeActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText("Instructions: Please follow the following steps.");
        jTextField1.setToolTipText("");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("1: Click on the appetizer, entree or dessert button \nto choose the type of food that you want.\n2: Enter the type of dish that you want in the text\nfield after these three buttons.\n3: After entering the food type, click on the Enter\nPreferences button and enter the inputs in that \nexact order.");
        jScrollPane1.setViewportView(jTextArea1);

        currentInstruction.setEditable(false);
        currentInstruction.setColumns(20);
        currentInstruction.setRows(5);
        jScrollPane2.setViewportView(currentInstruction);

        IncorrectInput.setEditable(false);
        IncorrectInput.setColumns(20);
        IncorrectInput.setRows(5);
        jScrollPane3.setViewportView(IncorrectInput);

        currentInstructionLable.setText("Specific Instructions");

        ResetP.setText("Reset Calories, Price and Restricions");
        ResetP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetPActionPerformed(evt);
            }
        });

        readyButton.setText("Click here if you are ready to go.");
        readyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyButtonActionPerformed(evt);
            }
        });

        FinalOutput.setEditable(false);
        FinalOutput.setColumns(20);
        FinalOutput.setRows(5);
        jScrollPane4.setViewportView(FinalOutput);

        jRadioButton1.setText("Spicy");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Hot");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        RestoreType.setText("Reset the Types");
        RestoreType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestoreTypeActionPerformed(evt);
            }
        });

        currentType.setEditable(false);
        currentType.setColumns(20);
        currentType.setRows(5);
        currentType.setText("Current type: None");
        jScrollPane5.setViewportView(currentType);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 369, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(readyButton)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(62, 62, 62)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(124, 124, 124)
                        .add(currentInstructionLable))
                    .add(layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 408, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(c, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(p, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(r, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(jRadioButton1)
                                        .add(18, 18, 18)
                                        .add(jRadioButton2)))
                                .add(18, 18, 18)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(ResetP)
                                    .add(ButtonPreference)))))
                    .add(layout.createSequentialGroup()
                        .add(39, 39, 39)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 427, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(AButton)
                                        .add(35, 35, 35))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                        .add(AppetizerType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)))
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(EntreeType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(EButton))
                                .add(18, 18, 18)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(6, 6, 6)
                                        .add(DButton))
                                    .add(DessertType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(28, 28, 28)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(RestoreType)))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 431, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(102, 102, 102)))
                .addContainerGap(88, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jLabel1)
                .add(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(currentInstructionLable)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(EntreeType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(DessertType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, AppetizerType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(AButton)
                    .add(EButton)
                    .add(DButton)
                    .add(RestoreType))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ButtonPreference)
                    .add(c, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(p, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(r, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(40, 40, 40)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jRadioButton1)
                            .add(jRadioButton2)))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(ResetP)))
                .add(12, 12, 12)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(3, 3, 3)
                .add(readyButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(4, 4, 4)
                .add(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonPreferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPreferenceActionPerformed

        String currentInput;
        
        currentInstruction.setText("Please type in the price that you would like to pay in this format: 10.00");
        //Make a method that check the format here.
        //Reset the text if format is incorrect: p.setText("Price");
        price = Double.parseDouble(p.getText());
        
        currentInstruction.setText("Please type in the calories that you would like the food to be: Eg: 1300");
        //Make a method that check the format here.
        //Reset the text if format is incorrect: c.setText("Calorie");
        calorie = Integer.parseInt(c.getText());
        
        currentInstruction.setText("Please type in the following if you have these restrictions:/n"
                + "meat, peanut, gluten/nIf you have none of these restrictions, please type in none./n"
                + "if you have multiple restriciontions, please seperate them with a comma(Eg: meat,peanut)");

        currentInput = r.getText();
        while((currentInput.contains("meat")||
                currentInput.contains("peanut")||
                currentInput.contains("gluten")||
                currentInput.contains("none"))!= true
               )//Make a more accurate method that check the format to replace this one
        {
            IncorrectInput.setText("Incorrect format. Please retype your restrictions(meat/peanut/gluten/none)");
            currentInput = r.getText();
        }
        String [] threeRestriction = new String[3];
        String [] twoRestriction = new String[2];
        String [] oneRestriciton = new String[1];
        if(currentInput.length()>8){
            threeRestriction[0]=currentInput.substring(0,currentInput.indexOf(",")-1);
            threeRestriction[1]=currentInput.substring(currentInput.indexOf(",")+1,currentInput.indexOf(",",currentInput.indexOf(",")));
            threeRestriction[2]=currentInput.substring(currentInput.indexOf(",",currentInput.indexOf(",")),currentInput.length()-1);
            restrictions = threeRestriction;
        }
        else if(currentInput.length()>6){
            twoRestriction[0]=currentInput.substring(0,currentInput.indexOf(",")-1);
            twoRestriction[1] = currentInput.substring(currentInput.indexOf(",")-1);
            restrictions = threeRestriction;
        }
        else{
            oneRestriciton[0] = currentInput;
            restrictions = oneRestriciton;
        }
        preferencesReady = true;
        IncorrectInput.setText("Successful input");
        
    }//GEN-LAST:event_ButtonPreferenceActionPerformed

    private void EButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EButtonActionPerformed
        String currentInput;
        if(typeReady == true && wantEntree == false){
            IncorrectInput.setText("Incorrect format. You have already selected a type of food.\n"
                    + "Please reset the food types before entering.");
        }
        else{
            wantEntree = true;
            currentInstruction.setText("You have selected Entree, please type in one of the following \n"
                    + "in the text field below the Entree button and press enter:\nMeat/Seafood/Noodles");
            currentType.setText("Current type: Entree");

            currentInput = EntreeType.getText();
            if((currentInput.equalsIgnoreCase("meat")||currentInput.equalsIgnoreCase("seafood")||
                    currentInput.equalsIgnoreCase("noudles"))!= true){
                IncorrectInput.setText("Incorrect format. Please retype:"
                        + "meat/seafood/noodles");
            }
            else{
                typeReady = true;
                IncorrectInput.setText("Successful input ("+currentInput+")");
                if(currentInput.equalsIgnoreCase("meat")){
                    meat = true;
                }
                else if(currentInput.equals("seafood")){
                    seafood = true;
                }
                else{
                    noodles = true;
                }
            } 
        }
    }//GEN-LAST:event_EButtonActionPerformed

    private void AButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AButtonActionPerformed
        // TODO add your handling code here:
        String currentInput;
        if(typeReady == true && wantAppetizer == false){
            IncorrectInput.setText("Incorrect format. You have already selected a type of food.\n"
                    + "Please reset the food types before entering.");
        }
        else{
            wantAppetizer = true;
            
            currentInstruction.setText("You have selected Appetizers, please type in one of the following\n"
                    + " in the text field below the appetizers button and press enter:\nSalad/Bread/Soup");
            currentType.setText("Current type: Appetizers");

            currentInput = AppetizerType.getText();
            System.out.println(currentInput);
            if((currentInput.equalsIgnoreCase("Salad")||currentInput.equalsIgnoreCase("Bread")||
                    currentInput.equalsIgnoreCase("Soup"))!= true){
                IncorrectInput.setText("Incorrect format. Please retype:"
                        + "salad/bread/soup");
            }
            else{
                    typeReady = true;
                    IncorrectInput.setText("Successful input ("+currentInput+")");
                    if(currentInput.equalsIgnoreCase("salad")){
                        salad = true;
                    }
                    else if(currentInput.equalsIgnoreCase("bread")){
                        bread = true;
                    }
                    else{
                        soup = true;
                } 
            }
        }
    }//GEN-LAST:event_AButtonActionPerformed

    private void DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DButtonActionPerformed
        String currentInput;
        if(typeReady == true && wantDessert == false){
            IncorrectInput.setText("Incorrect format. You have already selected a type of food.\n"
                    + "Please reset the food types before entering.");
        }
        else{
            wantDessert = true;
            currentInstruction.setText("You have selected Desserts, please type in one of the following\n"
                    + " in the text field below the Dessert button and press enter:\nBeverage/Fruit/Other");
            currentType.setText("Current type: Desserts");

            currentInput = DessertType.getText();
            if((currentInput.equalsIgnoreCase("beverage")||currentInput.equalsIgnoreCase("fruit")||
                    currentInput.equalsIgnoreCase("other"))!= true){
                IncorrectInput.setText("Incorrect format. Please retype: beverage/fruit/other");
            }
            else{
                typeReady = true;
                IncorrectInput.setText("Successful input ("+currentInput+")");
                
                if(currentInput.equalsIgnoreCase("beverage")){
                    beverage = true;
                }
                else if(currentInput.equals("fruit")){
                    fruit = true;
                }
                else{
                    dessertother = true;
                }        // TODO add your handling code here:
                typeReady = true;
            }
        }
    }//GEN-LAST:event_DButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    @SuppressWarnings("empty-statement")
    private void ResetPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetPActionPerformed
        // TODO add your handling code here:
        price = -1;
        calorie = -1;
        String[] a = {"none"};
        restrictions = a;
        preferencesReady = false;
    }//GEN-LAST:event_ResetPActionPerformed

    private void readyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyButtonActionPerformed
        if(typeReady == true && preferencesReady == true){
            //Run main program and print to the output box
        }
        else if (typeReady == false && preferencesReady== false){
            IncorrectInput.setText("You have not entered what type of food you want,\n nor your preferences");
        }
        else if (typeReady == false){
            IncorrectInput.setText("You have not entered what type of food you want.");
        }
        else{
            IncorrectInput.setText("You have not entered your preferences.");
        }
        
    }//GEN-LAST:event_readyButtonActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

        if(hot.equals("y")){
            hot = "n";
        }
        else{
            hot = "y";
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if(spice.equals("y")){
            spice = "n";
        }
        else{
            spice = "y";
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cActionPerformed

    private void pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pActionPerformed

    private void rActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rActionPerformed

    private void RestoreTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestoreTypeActionPerformed
        // TODO add your handling code here:
       currentType.setText("Current type: None");
       wantAppetizer = false;
       AppetizerType.setText("Appetizer type");
       wantEntree = false;
       EntreeType.setText("Entree type");
       wantDessert = false;
       DessertType.setText("Dessert type");
       
       typeReady = false;
       
       bread = false;
       salad = false;
       soup = false;
       meat = false;
       seafood = false;
       noodles = false;
       beverage = false;
       fruit = false;
       dessertother = false;
    }//GEN-LAST:event_RestoreTypeActionPerformed

    private void AppetizerTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppetizerTypeActionPerformed
        // TODO add your handling code here:
        if (wantAppetizer ==  false){
            IncorrectInput.setText("You have not selected appetizers, please select first.");
        }
    }//GEN-LAST:event_AppetizerTypeActionPerformed

    private void EntreeTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntreeTypeActionPerformed
        if (wantEntree ==  false){
            IncorrectInput.setText("You have not selected Entree, please select first.");
        }
    }//GEN-LAST:event_EntreeTypeActionPerformed

    private void DessertTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DessertTypeActionPerformed
        if (wantDessert ==  false){
            IncorrectInput.setText("You have not selected Desserts, please select first.");
        }
    }//GEN-LAST:event_DessertTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FoodGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FoodGui().setVisible(true);
            }
        });
    }
    public static boolean ToBoolean(String decision){
        if(decision.equalsIgnoreCase("Y")){
            return true;
        }
        else return false;
    }
    public static boolean CheckInput(String decision){
        if (decision.equalsIgnoreCase("Y")||decision.equalsIgnoreCase("N")){
            return true;
        }
        else return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AButton;
    private javax.swing.JTextField AppetizerType;
    private javax.swing.JButton ButtonPreference;
    private javax.swing.JButton DButton;
    private javax.swing.JTextField DessertType;
    private javax.swing.JButton EButton;
    private javax.swing.JTextField EntreeType;
    private javax.swing.JTextArea FinalOutput;
    private javax.swing.JTextArea IncorrectInput;
    private javax.swing.JButton ResetP;
    private javax.swing.JButton RestoreType;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JTextField c;
    private javax.swing.JTextArea currentInstruction;
    private javax.swing.JLabel currentInstructionLable;
    private javax.swing.JTextArea currentType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField p;
    private javax.swing.JTextField r;
    private javax.swing.JButton readyButton;
    // End of variables declaration//GEN-END:variables
}
